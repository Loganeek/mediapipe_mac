name: Build

on: [push]

env:
  BUILD_NEW_OPENCV: false

jobs:
  build_opencv:
    if: ${{ vars.BUILD_NEW_OPENCV == 'true' }}
    uses: ./.github/workflows/build_opencv.yml

  build:
    # if: ${{ vars.BUILD_NEW_OPENCV && false || true }}
    # needs: ${{ vars.BUILD_NEW_OPENCV && ["build_opencv"] || [] }}
    needs: ${{ vars.BUILD_NEW_OPENCV && 'build_opencv' || '' }}
    runs-on: macos-latest
    
    # strategy:
    #   matrix:
    #     # python-version: ["3.10", "3.11", "3.12"]
    #     python-version: ["3.12"]
        
    steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
        
    - name: Install CMake
      uses: ssrobins/install-cmake@v1
      with:
        version: 3.24.4
        
    - name: config env
      shell: bash
      run: |
        pip3 install setuptools
        pip3 install --user six

    - uses: actions/checkout@v4

    - name: Download file for "build opencv"
      if: ${{ vars.BUILD_NEW_OPENCV }}
      uses: actions/download-artifact@v4
      with:
        name: release
        path: opencv

    - name: replace core and imgproc
      if: ${{ vars.BUILD_NEW_OPENCV }}
      shell: bash
      run: |
        pwd
        ls -lh
        cp opencv/lib/Release/libopencv_imgproc.a mediapipe/tasks/c/vision/hand_landmarker
        cp opencv/lib/Release/libopencv_core.a mediapipe/tasks/c/vision/hand_landmarker

    - name: build hand_landmarker.dylib
      shell: bash
      run: |
        uname -m
        bazel build --verbose_failures -c opt --config ios_arm64 --define MEDIAPIPE_DISABLE_GPU=1 //mediapipe/tasks/c/vision/hand_landmarker:libhand_landmarker.dylib

    - name: upload
      uses: actions/download-artifact@v4
      with:
        name: libhand_landmarker.dylib
        path: bazel-bin/mediapipe/tasks/c/vision/hand_landmarker/libhand_landmarker.dylib